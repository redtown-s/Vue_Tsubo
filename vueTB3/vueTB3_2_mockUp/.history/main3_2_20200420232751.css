/* 全体背景：黒、文字：白 */
* {
  border: 1px rgb(174, 177, 142) solid;
}

body {
  background-color: #000;
  color: #fff;
}

/* コンテンツ表示幅：960、画面両幅の余白：自動 */
.container {
  width: 960px;
  margin: 0 auto;
}

/* 画面上部 *********************************************************/

/* 上部「商品一覧」文字の太さ：普通に。ﾀｲﾄﾙに下線入れる */
.pageTitle {
  font-weight: normal;
  border-bottom: 2px solid;
}

/* 検索結果を左寄せに。セール対象～並び替えを右寄せに。検索結果の並びと並列化 */
.search {
  display: flex; /*ある要素に定義するだけで、その直下の要素が並列になる便利なスタイル。フレックスボックスを利用するためには、flexboxを利用する親要素に、display:flexを追加します。これにより、親要素がflexコンテナとなり、子要素がflexアイテムとなります。*/
  justify-content: space-between; /* 均等配置。各アイテムを均等に配置し最初のアイテムは先頭に寄せ、最後のアイテムは末尾に寄せる */
}

.search .target {
  display: inline-block;
  /* インラインレベルのブロックコンテナを生成する。要素全体としてはインライン要素のような表示形式だが、内部はブロックボックスで高さ・横幅などを指定できる。 */
}

/* <LABEL>タグはフォームの構成部品（一行テキストボックス・チェックボックス・ラジオボタン等）と、 その項目名（ラベル）を明確に関連付けるための要素です。 これによりチェックボックスやラジオボタンでは、 関連付けられたテキスト部分をクリックしてもチェックを付けることができるようになります。 */
/* <LABEL>タグの使用方法は2通りあります。 1つは<LABEL>タグのfor属性の値と、フォーム部品のid属性の値を同じものにすることで両者を関連付ける方法です。 もう1つは<LABEL>～</LABEL>内にフォーム部品とテキストを含める方法です。後者の方法は、Internet Explorer5や6には対応していないようなので、できるだけ前者を用いた方が良いでしょう。 */
.search .target .label {
  margin-right: 15px;
}

.search .sort {
  display: inline-block;
  /* displayプロパティは、ブロックレベル・インライン・テーブル・ルビ・フレックスコンテナ等の、要素の表示形式を指定する際に使用します。 */
}

.list {
  display: flex;
  flex-wrap: wrap; /* フレックスアイテムの折り返しの有無、折り返す場合の折り返し行の積み上げ方向を指定できます。wrap 折り返しあり */
  justify-content: space-between; /* justify※正当化する。space-betweenアイテムの間にスペースを均等に割り付け。
justify-contentプロパティは、コンテナ内全体の主軸方向（初期値では横方向）の揃え位置を指定する際に使用します。
align-contentプロパティの主軸方向（初期値では横方向）版と考えると理解しやすいでしょう。 */
}

/* CSS において ::after は、選択した要素の最後の子要素として擬似要素を作成します。よく content プロパティを使用して、要素に装飾的な内容を追加するために用いられます。この要素は既定でインラインです。 */
.list::after {
  /* contentプロパティは、要素の直前または直後に、文字列や画像などのコンテンツを挿入する際に使用します。 contentプロパティを適用することができるのは、:before擬似要素および:after擬似要素のみです。 */
  content: "";
  display: block; /* ブロックボックスを生成する */
  width: 250px;
}

.item {
  /* flexプロパティは、フレックスコンテナ内のアイテムの幅についてまとめて指定する際に使用
  フレックスアイテムとは、フレックスコンテナ内のアイテムのことです。 具体的に言うと、display:flex; を指定したボックスがフレックスボックス、その子要素がフレックスアイテムです。 */
  flex: 0 1 250px;
  margin-bottom: 30px;
}

.item .image{
  /* positionプロパティは、ボックスの配置方法（基準位置）が、相対位置か絶対位置かを指定する際に使用します。

positionプロパティで指定するのは、配置方法（基準位置）のみです。 実際の表示位置の指定には、 top、 bottom、 left、 rightを併用して、基準位置からの距離を設定する必要があります。 */
/* relative
相対位置への配置となります。positionプロパティでstaticを指定した場合に表示される位置が基準位置となります。 */
  position: relative; 
  text-align: center;　/* image内のSALEや商品名を中央に */　
}

.item .image img{
width: 100%;
height: 100%; /* ここで商品画像が均等に並ぶ */
}

